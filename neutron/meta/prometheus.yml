{%- from "neutron/map.jinja" import server, monitoring with context %}

{%- if server.get('enabled', False) %}
{%- raw %}
server:
  alert:
    NeutronAPIDown:
      if: >-
        openstack_api_check_status{service=~"neutron.*"} == 0
      for: 2m
      labels:
        severity: down
        service: "{{ $labels.service }}"
      annotations:
        summary: "Endpoint check for '{{ $labels.service }}' is down"
        description: >-
            Endpoint check for '{{ $labels.service }}' is down for 2 minutes
    NeutronAPIServiceDown:
      if: >-
        http_response_status{service=~"neutron-api"} == 0
      for: 2m
      labels:
        severity: down
        service: "{{ $labels.service }}"
      annotations:
        summary: "HTTP check for '{{ $labels.service }}' down"
        description: >-
            The HTTP check for '{{ $labels.service }}' is down on {{ $labels.host }} for 2 minutes.
{%- endraw %}
{%- if server.get('backend', {}).engine is defined and server.backend.engine == "ml2" %}
{%- raw %}
    NeutronSomeAgentsDown:
      if: >-
        openstack_neutron_agents{state="down"} > 0 and ignoring(state) openstack_neutron_agents{state="up"} >= 2
      for: 2m
      labels:
        severity: warning
        service: "{{ $labels.service }}"
      annotations:
        summary: "Some {{ $labels.service }} agents down"
        description: >-
            {{ $value }} '{{ $labels.service }}' agent(s) is/are down for 2 minutes
    NeutronOnlyOneAgentUp:
      if: >-
        openstack_neutron_agents{state="up"} == 1 and ignoring(state) openstack_neutron_agents{state=~"down|disabled"} > 0
      for: 2m
      labels:
        severity: critical
        service: "{{ $labels.service }}"
      annotations:
        summary: "Only one {{ $labels.service }} agent up"
        description: >-
            Only one '{{ $labels.service }}' agent is up for 2 minutes
    NeutronAllAgentsDown:
      if: >-
        openstack_neutron_agents{state="up"} == 0
      for: 2m
      labels:
        severity: down
        service: "{{ $labels.service }}"
      annotations:
        summary: "All {{ $labels.service }} agents down"
        description: >-
            All '{{ $labels.service }}' agents are down for 2 minutes
    NeutronErrorLogsTooHigh:
{%- endraw %}
      {%- set log_threshold = monitoring.error_log_rate|float %}
      if: >-
        sum(rate(log_messages{service="neutron",level=~"error|emergency|fatal"}[5m])) without (level) > {{ log_threshold }}
{%- raw %}
      labels:
        severity: warning
        service: "{{ $labels.service }}"
      annotations:
        summary: 'Too many errors in {{ $labels.service }} logs'
        description: 'The rate of errors in {{ $labels.service }} logs over the last 5 minutes is too high on node {{ $labels.host }} (current value={{ $value }}, threshold={%- endraw %}{{ log_threshold }}).'
{%- endif %}
{%- endif %}
